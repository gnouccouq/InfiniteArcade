{"playerName":"Maximilan","coins":486011,"gems":185417,"metals":270,"jewelCoins":60,"playerLevel":4,"playerXP":644,"playerRank":"Đồng","totalScore":9,"highScore":9,"selectedAvatarName":"user_profile_sample","selectedFrameName":"074DDA266DE8C649B6693900FC4776CE","selectedVideoFrameName":"PvpBtnDynamic36","unlockedVideoFrames":[],"luckyWheelSpins":4,"totalVipGems":194360,"lastVipRewardClaimed":10,"unlockedItemKeys":["Skin_yellowbird-midflap","Skin_redbird-upflap","Skin_bluebird-upflap","Avatar_user_profile_empty","Avatar_user_profile_sample","Avatar_valorpass10","Avatar_valorpass11","Avatar_3C38CFA377557736DEA59CB0600A6B4E","Frame_HeadFrame_pifu504","Frame_HeadFrame_chushi101","Frame_885669019D319A4F8A34EC3FE2C1A79D","Frame_FAC6C62F417B7EC8CA2779D54E60CE59","Frame_FrameVIP4","Frame_680C3F9A7973F367017A0CD64D5E3AF8","Frame_074DDA266DE8C649B6693900FC4776CE","Frame_HeadFrame_huodong203","VideoFrame_LoginWukong1","VideoFrame_PvpBtnDynamic36","VideoFrame_CrimsontearsMp4"],"inventoryItems":[{"itemId":"jewel_coin","quantity":60},{"itemId":"name_change_card","quantity":8}],"taskProgress":[{"taskId":"play_1_game","currentCount":0,"isCompleted":false,"isRewardClaimed":false},{"taskId":"play_5_game_bird","currentCount":0,"isCompleted":false,"isRewardClaimed":false},{"taskId":"two_own_skin","currentCount":3,"isCompleted":true,"isRewardClaimed":true}]}