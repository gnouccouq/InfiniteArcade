{"playerName":"Cuộc đời trai tân","coins":264438,"gems":973,"metals":25,"jewelCoins":0,"playerLevel":4,"playerXP":320,"playerRank":"Thách Đấu","totalScore":40242556,"highScore":3,"selectedAvatarName":"user_profile_sample","selectedFrameName":"FrameVIP4","selectedVideoFrameName":"LoginWukong1","unlockedVideoFrames":[],"luckyWheelSpins":0,"totalVipGems":2000,"lastVipRewardClaimed":4,"unlockedItemKeys":["Skin_yellowbird-midflap","Skin_redbird-upflap","Avatar_user_profile_empty","Avatar_user_profile_sample","Avatar_DED86D3ACAA017CB94B60158E8F8A548","Frame_HeadFrame_pifu504","Frame_4E0B226C37FA0B572CA012A9BE756735","Frame_FrameVIP4","VideoFrame_LoginWukong1","VideoFrame_SpringFestivalMain_0"],"inventoryItems":[],"taskProgress":[{"taskId":"play_1_game","currentCount":0,"isCompleted":false,"isRewardClaimed":false},{"taskId":"play_5_game_bird","currentCount":0,"isCompleted":false,"isRewardClaimed":false},{"taskId":"two_own_skin","currentCount":2,"isCompleted":true,"isRewardClaimed":false},{"taskId":"login_1_day","currentCount":1,"isCompleted":true,"isRewardClaimed":true},{"taskId":"spend_coins_2000","currentCount":5999,"isCompleted":true,"isRewardClaimed":true},{"taskId":"play_100_flappybird","currentCount":2,"isCompleted":false,"isRewardClaimed":false}],"dailyRewardClaimedProgress":"0101100","dailyRewardLastClaimDate":"2025-09-25","seasonHistory":[],"lastPlayedSeason":1,"passwordHash":"","mailboxData":{"messages":[]}}